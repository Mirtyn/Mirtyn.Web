@model LadderViewModel<RoundedShooter.Ladder>

@{ 
    void DisplayLadder(string title, IEnumerable<RoundedShooter.Ladder.Entry> entries)
    {
        <h5>@title</h5>
        if(entries != null)
        {
            <ol>
                @foreach (var entry in entries)
                {
                    <li>
                        @entry.Name: @entry.PointsDescription() pts.
                    </li>
                }
            </ol>
        }
    }
}

<div class="row">

    <div class="col-12">
        <h4>Version @Model.Ladder.Version</h4>
    </div>

    @if(Model.Ladder != null)
    {
        var entries = Model.Ladder.EntriesFor(RoundedShooter.Ladder.Flag.Easy);

        if(entries != null && entries.Count > 0)
        {
            <div class="col-12 col-lg-4">
                @{DisplayLadder("Easy", entries); }
            </div>
        }
    
        entries = Model.Ladder.EntriesFor(RoundedShooter.Ladder.Flag.Medium);

        if(entries != null && entries.Count > 0)
        {
            <div class="col-12 col-lg-4">
                @{DisplayLadder("Medium", entries); }
            </div>
        }
    
        entries = Model.Ladder.EntriesFor(RoundedShooter.Ladder.Flag.Hard);

        if(entries != null && entries.Count > 0)
        {
            <div class="col-12 col-lg-4">
                @{DisplayLadder("Hard", entries); }
            </div>
        }
    
        entries = Model.Ladder.EntriesFor(RoundedShooter.Ladder.Flag.Master);

        if(entries != null && entries.Count > 0)
        {
            <div class="col-12 col-lg-4">
                @{DisplayLadder("Master", entries); }
            </div>
        }
    
        entries = Model.Ladder.EntriesFor(RoundedShooter.Ladder.Flag.Endless);

        if(entries != null && entries.Count > 0)
        {
            <div class="col-12 col-lg-4">
                @{DisplayLadder("Endless", entries); }
            </div>
        }
    }
</div>